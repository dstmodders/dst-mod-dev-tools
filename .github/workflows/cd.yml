name: CD

on:
  push:
    branches:
      - main

jobs:
  docs:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set a job-wide environment variables
        run: |
          echo "DOCKER_IMAGE=${{ secrets.PRIVATE_REGISTRY }}/mod-dev-tools/docs" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=latest" >> $GITHUB_ENV
      - name: Generate documentation
        id: ldoc
        uses: dstmodders/action@main
        with:
          ldoc: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to the private registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY }}
          username: ${{ secrets.PRIVATE_REGISTRY_USERNAME }}
          password: ${{ secrets.PRIVATE_REGISTRY_PASSWORD }}
      - name: Generate an image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: latest=true
          images: ${{ env.DOCKER_IMAGE }}
          labels: maintainer=victor@popkov.me
      - name: Build an image
        uses: docker/build-push-action@v4
        with:
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }}
          cache-to: type=inline
          context: ./docs/
          file: ./docs/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm/v7
          pull: true
          push: ${{ !env.ACT && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
      - name: Add Docker certificates to access the remote host
        if: ${{ !env.ACT }}
        run: |
          mkdir -p "${DOCKER_CERT_PATH}"
          echo "${{ secrets.DOCKER_TLS_CA }}" > "${DOCKER_CERT_PATH}/ca.pem"
          echo "${{ secrets.DOCKER_TLS_CERT }}" > "${DOCKER_CERT_PATH}/cert.pem"
          echo "${{ secrets.DOCKER_TLS_KEY }}" > "${DOCKER_CERT_PATH}/key.pem"
          chmod 400 "${DOCKER_CERT_PATH}/ca.pem"
          chmod 400 "${DOCKER_CERT_PATH}/cert.pem"
          chmod 400 "${DOCKER_CERT_PATH}/key.pem"
        env:
          DOCKER_CERT_PATH: /home/runner/.docker/deploy/
      - name: Deploy Docker Stack
        if: ${{ !env.ACT }}
        working-directory: ./docs/
        run: |
          docker stack rm "${DOCKER_STACK_NAME}"
          docker stack deploy \
            --with-registry-auth \
            --resolve-image=always \
            --compose-file=docker-stack.yml \
            --prune \
            "${DOCKER_STACK_NAME}"
        env:
          DOCKER_CERT_PATH: /home/runner/.docker/deploy/
          DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
          DOCKER_STACK_NAME: dstmodders_mod_dev_tools
          DOCKER_STACK_NODE_HOSTNAME: ${{ secrets.DOCKER_STACK_NODE_HOSTNAME }}
          DOCKER_TLS_VERIFY: 1
          LOKI_PIPELINE_STAGE_FILE: /etc/loki/pipelines/nginx.yml
          LOKI_URL: ${{ secrets.LOKI_URL }}
          NGINX_CONF: /etc/nginx/nginx.conf
          TRAEFIK_HOST: docs.dstmodders.com
          TRAEFIK_NAME: dstmodders-mod-dev-tools-docs
          TRAEFIK_PATH_PREFIX: /dev-tools/
